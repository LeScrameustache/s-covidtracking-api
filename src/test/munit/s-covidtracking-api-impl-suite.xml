<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="s-covidtracking-api-impl-suite.xml" />
	<munit:test name="get:\getAll:s-covidtracking-api-config-test" doc:id="759c637d-09c6-43e9-92ad-40931d183e1b" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="1b2d681b-215c-46ed-b43b-bb2329881307" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3bf1c746-8158-4056-b5ab-81c82f071a04" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getgetAllscovidtrackingapiconfigtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getgetAllscovidtrackingapiconfigtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getgetAllscovidtrackingapiconfigtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="da223e05-443c-4ace-b109-6e54554fadb9" >
				<munit:payload value="#[readUrl('classpath://getgetAllscovidtrackingapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getgetAllscovidtrackingapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getgetAllscovidtrackingapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\getAll:s-covidtracking-api-config" doc:id="d12b6e38-d60e-4faa-9f41-e321d99f68b7" name="get:\getAll:s-covidtracking-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="fb6fa9fa-d0af-48d8-a17b-a421b5ca2f45" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getgetAllscovidtrackingapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\getState\(state):s-covidtracking-api-config-test" doc:id="4a54321c-8192-4155-9d5b-20b97e72a184" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="b5cb4163-f75d-4199-882f-2fb205d209da" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="43a561ad-0708-4b09-bef2-0a86507d22a4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getgetStatestatescovidtrackingapiconfigtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getgetStatestatescovidtrackingapiconfigtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getgetStatestatescovidtrackingapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="state" value="#[output application/java --- readUrl('classpath://getgetStatestatescovidtrackingapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="cd846ccb-62d2-4d17-b0e6-17a93aeb1a83" >
				<munit:payload value="#[readUrl('classpath://getgetStatestatescovidtrackingapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getgetStatestatescovidtrackingapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getgetStatestatescovidtrackingapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\getState\(state):s-covidtracking-api-config" doc:id="8b068208-4d00-43d5-865c-8fb3dc859555" name="get:\getState\(state):s-covidtracking-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="3c2e3ba8-feda-4aad-a8eb-83e373f341a5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getgetStatestatescovidtrackingapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
